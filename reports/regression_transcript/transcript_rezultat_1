# 0
# vsim -novopt -quiet -nocoverage "+notimingchecks" "+nowarnTSCALE" -sva top -GTEST_NAME=testul_4 -GWRITE_ORDER=1 -GWRITE_NR=20 -GREAD_ORDER=1 -GREAD_NR=20 
# Start time: 18:12:42 on Mar 31,2024
# 
# Writing values to register stack...
# write_pointer :  31
# Writing to register location 31: 
#   opcode = 1 (PASSA)
#   operand_a = -12
#   operand_b = 7
# 
# write_pointer :  30
# Writing to register location 30: 
#   opcode = 0 (ZERO)
#   operand_a = -9
#   operand_b = 1
# 
# write_pointer :  29
# Writing to register location 29: 
#   opcode = 7 (MOD)
#   operand_a = -15
#   operand_b = 8
# 
# write_pointer :  28
# Writing to register location 28: 
#   opcode = 5 (MULT)
#   operand_a = -8
#   operand_b = 7
# 
# write_pointer :  27
# Writing to register location 27: 
#   opcode = 3 (ADD)
#   operand_a = -9
#   operand_b = 5
# 
# write_pointer :  26
# Writing to register location 26: 
#   opcode = 4 (SUB)
#   operand_a = 5
#   operand_b = 3
# 
# write_pointer :  25
# Writing to register location 25: 
#   opcode = 3 (ADD)
#   operand_a = 3
#   operand_b = 12
# 
# write_pointer :  24
# Writing to register location 24: 
#   opcode = 6 (DIV)
#   operand_a = 12
#   operand_b = 3
# 
# write_pointer :  23
# Writing to register location 23: 
#   opcode = 1 (PASSA)
#   operand_a = 3
#   operand_b = 14
# 
# write_pointer :  22
# Writing to register location 22: 
#   opcode = 1 (PASSA)
#   operand_a = -2
#   operand_b = 9
# 
# write_pointer :  21
# Writing to register location 21: 
#   opcode = 7 (MOD)
#   operand_a = 9
#   operand_b = 9
# 
# write_pointer :  20
# Writing to register location 20: 
#   opcode = 3 (ADD)
#   operand_a = 9
#   operand_b = 7
# 
# write_pointer :  19
# Writing to register location 19: 
#   opcode = 5 (MULT)
#   operand_a = 7
#   operand_b = 3
# 
# write_pointer :  18
# Writing to register location 18: 
#   opcode = 7 (MOD)
#   operand_a = 3
#   operand_b = 5
# 
# write_pointer :  17
# Writing to register location 17: 
#   opcode = 0 (ZERO)
#   operand_a = -11
#   operand_b = 15
# 
# write_pointer :  16
# Writing to register location 16: 
#   opcode = 6 (DIV)
#   operand_a = 15
#   operand_b = 0
# 
# write_pointer :  15
# Writing to register location 15: 
#   opcode = 4 (SUB)
#   operand_a = 0
#   operand_b = 14
# 
# write_pointer :  14
# Writing to register location 14: 
#   opcode = 3 (ADD)
#   operand_a = -2
#   operand_b = 4
# 
# write_pointer :  13
# Writing to register location 13: 
#   opcode = 0 (ZERO)
#   operand_a = -12
#   operand_b = 3
# 
# write_pointer :  12
# Writing to register location 12: 
#   opcode = 4 (SUB)
#   operand_a = -13
#   operand_b = 8
# 
# 
# Reading back the same register locations written...
# Read pointer: 1 
# Read from register location 0: 
#   opcode = x ()
#   operand_a = x
#   operand_b = x
# 
#   result = x
# 
# Rezultatele nu se aseamana
# rezultatul calculat: x
# rezultatul stocat : 0 
# Read pointer: 17 
# Read from register location 1: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   result = 0
# 
# Rezultatele sunt asemanatoare
# rezultatul calculat: x
# rezultatul stocat : 0 
# Read pointer: 18 
# Read from register location 2: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   result = 0
# 
# Rezultatele sunt asemanatoare
# rezultatul calculat: x
# rezultatul stocat : 0 
# Read pointer: 1 
# Read from register location 3: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   result = 0
# 
# Rezultatele sunt asemanatoare
# rezultatul calculat: x
# rezultatul stocat : 0 
# Read pointer: 31 
# Read from register location 4: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   result = 0
# 
# Rezultatele sunt asemanatoare
# rezultatul calculat: x
# rezultatul stocat : 0 
# Read pointer: 21 
# Read from register location 5: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   result = 0
# 
# Rezultatele sunt asemanatoare
# rezultatul calculat: x
# rezultatul stocat : 0 
# Read pointer: 7 
# Read from register location 6: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   result = 0
# 
# Rezultatele sunt asemanatoare
# rezultatul calculat: x
# rezultatul stocat : 0 
# Read pointer: 4 
# Read from register location 7: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   result = 0
# 
# Rezultatele sunt asemanatoare
# rezultatul calculat: x
# rezultatul stocat : 0 
# Read pointer: 28 
# Read from register location 8: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   result = 0
# 
# Rezultatele sunt asemanatoare
# rezultatul calculat: x
# rezultatul stocat : 0 
# Read pointer: 21 
# Read from register location 9: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   result = 0
# 
# Rezultatele sunt asemanatoare
# rezultatul calculat: x
# rezultatul stocat : 0 
# Read pointer: 27 
# Read from register location 10: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   result = 0
# 
# Rezultatele sunt asemanatoare
# rezultatul calculat: x
# rezultatul stocat : 0 
# Read pointer: 12 
# Read from register location 11: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   result = 0
# 
# Rezultatele sunt asemanatoare
# rezultatul calculat: x
# rezultatul stocat : 0 
# Read pointer: 24 
# Read from register location 12: 
#   opcode = 4 (SUB)
#   operand_a = -13
#   operand_b = 8
# 
#   result = -21
# 
# Rezultatele sunt asemanatoare
# rezultatul calculat: 0
# rezultatul stocat : -21 
# Read pointer: 10 
# Read from register location 13: 
#   opcode = 0 (ZERO)
#   operand_a = -12
#   operand_b = 3
# 
#   result = 0
# 
# Rezultatele sunt asemanatoare
# rezultatul calculat: 0
# rezultatul stocat : 0 
# Read pointer: 2 
# Read from register location 14: 
#   opcode = 3 (ADD)
#   operand_a = -2
#   operand_b = 4
# 
#   result = 2
# 
# Rezultatele sunt asemanatoare
# rezultatul calculat: 0
# rezultatul stocat : 2 
# Read pointer: 14 
# Read from register location 15: 
#   opcode = 4 (SUB)
#   operand_a = 0
#   operand_b = 14
# 
#   result = -14
# 
# Rezultatele sunt asemanatoare
# rezultatul calculat: 0
# rezultatul stocat : -14 
# Read pointer: 9 
# Read from register location 16: 
#   opcode = 6 (DIV)
#   operand_a = 15
#   operand_b = 0
# 
#   result = x
# 
# Rezultatele nu se aseamana
# rezultatul calculat: 0
# rezultatul stocat : 0 
# Read pointer: 12 
# Read from register location 17: 
#   opcode = 0 (ZERO)
#   operand_a = -11
#   operand_b = 15
# 
#   result = 0
# 
# Rezultatele sunt asemanatoare
# rezultatul calculat: 0
# rezultatul stocat : 0 
# Read pointer: 23 
# Read from register location 18: 
#   opcode = 7 (MOD)
#   operand_a = 3
#   operand_b = 5
# 
#   result = 3
# 
# Rezultatele sunt asemanatoare
# rezultatul calculat: 0
# rezultatul stocat : 3 
# Read pointer: 17 
# Read from register location 19: 
#   opcode = 5 (MULT)
#   operand_a = 7
#   operand_b = 3
# 
#   result = 21
# 
# Rezultatele sunt asemanatoare
# rezultatul calculat: 0
# rezultatul stocat : 21 
# Read pointer: 13 
# Read from register location 20: 
#   opcode = 3 (ADD)
#   operand_a = 9
#   operand_b = 7
# 
#   result = 16
# 
# Rezultatele sunt asemanatoare
# rezultatul calculat: 0
# rezultatul stocat : 16 
# 
# ***********************************************************
# ***                       STATISTISCS                  ***
# ***           READ_ORDER = 1 ,  WRITE_ORDER = 1     ***
# ***           TESTS FAILED = 2  TOTAL_TESTS =  20    ***
# ***********************************************************
# 
# ** Note: $finish    : ../lab01_testbench_interface/instr_register_test.sv(122)
#    Time: 666 ns  Iteration: 1  Instance: /top/test
# End time: 18:12:43 on Mar 31,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
